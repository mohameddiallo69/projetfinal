version: '3'
services:
  producer:
    build: 
      context: .
      dockerfile: Producer/DockerFile.Producer
    depends_on:
      - kafka
  consumer:
    build: 
      context: .
      dockerfile: Consumer/DockerFile.Consumer
    depends_on:
      - spark-master
      - spark-worker
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    container_name: zookeeper
    hostname: zookeeper
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: 'bitnami/kafka'
    container_name: kafka
    hostname: kafka
    ports:
      - '9092:9092'
      - '9093:9093'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    depends_on:
      - zookeeper
  spark-master:
    build: 
      context: .
      dockerfile: DockerFile.Spark
    container_name: "spark-master"
    hostname: spark-master
    environment:
      - SPARK_MODE=master
    ports:
      - '8080:8080'
      - '7077:7077'
    depends_on:
      - kafka
  spark-worker:
    build: 
      context: .
      dockerfile: DockerFile.Spark
    container_name: "spark-worker"
    hostname: spark-worker
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
    depends_on:
      - spark-master
  mongo:
    image: "mongo:latest"
    container_name: "mongo"
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=ProjectFinal_ARMD
      - MONGO_INITDB_ROOT_PASSWORD=PF.password
    volumes:
      - ./data:/data/db
    ports:
      - "27017:27017"
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ProjectFinal_ARMD
      ME_CONFIG_MONGODB_ADMINPASSWORD: PF.password
      ME_CONFIG_MONGODB_URL: mongodb://ProjectFinal_ARMD:PF.password@mongo:27017/
  streamlit:
    build: 
      context: .
      dockerfile: Streamlit/DockerFile.Streamlit
    ports:
      - "8501:8501"
    depends_on:
      - consumer
